type Service {
  id: ID! @unique
  name: String! @unique
  streams: [Stream!]!
}

type Stream {
  id: ID! @unique
  name: String! @unique
  metadata: Json
  schedules: [Schedule!]!
  exclusions: [Exclusion!]!
  fragments: [Fragment!]!
}

type Exclusion {
  id: ID! @unique
  start: DateTime!
  offset: Int! @default(value: 0)
  duration: Int!
  storeName: String
  stream: Stream!
}

type Fragment {
  id: ID! @unique
  start: DateTime!
  offset: Int! @default(value: 0)
  duration: Int!
  storeName: String
  stream: Stream!
  labels: [Label!]!
}

type Label {
  id: ID! @unique
  slug: String! @unique
  name: String!
  value: String!
  fragments: [Fragment!]!
  schedules: [Schedule!]!
}

type Schedule {
  id: ID! @unique
  freq: FREQ! @default(value: MINUTELY)
  duration: Int!
  count: Int @default(value: 1)
  startTimes: [String!]!
  weekdays: [Weekday!]!
  defaultLabels: [Label!]!
  stream: Stream!
}

type Rule {
  id: ID! @unique
  name: String
  metadata: Json
  start: DateTime
  end: DateTime
  includedAnd: [Label!]! @relation(name: "IncludedAndLabelRuleRelation")
  includedOr: [Label!]! @relation(name: "IncludedOrLabelRuleRelation")
  excludedAnd: [Label!]! @relation(name: "ExcludedAndLabelRuleRelation")
  excludedOr: [Label!]! @relation(name: "ExcludedOrLabelRuleRelation")
}

enum FREQ {
  """Every given minutes"""
  MINUTELY
  """Every given seconds"""
  SECONDLY
  """Every given days"""
  DAILY
}

enum Weekday {
  """Monday"""
  MO
  """Tuesday"""
  TU
  """Wendsday"""
  WE
  """Thursday"""
  TH
  """Friday"""
  FR
  """Saturday"""
  SA
  """Sunday"""
  SU
}
