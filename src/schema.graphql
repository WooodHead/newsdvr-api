# import Query.* from "./generated/graphql-schema/prisma.graphql"

type Query {
  """Get availabl0e recording stores from a given Stream"""
  stores(stream: StreamWhereUniqueInput!): [Store]
}

type Clip {
  playlist: String!
}

"""Continuous recroding available for fragment extraction from a given stream"""
type Store @cacheControl(maxAge: 30) {
  """Name that identifies this store in the recordings provider"""
  name: String!
  start: DateTime @cacheControl(maxAge: 10)
  end: DateTime @cacheControl(maxAge: 10)
  stream: Stream!
  fragments: [Fragment!]!
  exclusions: [Exclusion!]!
}

type Mutation {
  addFragment(start: DateTime, duration: Int): Fragment!
  adjustFragment(fragmentId: ID!, newStart: DateTime, newEnd: DateTime): Fragment!
  # addLabel(FragmentId: ID!, name: String!, value: String, labelId: ID): Label
  # removeLabel(FragmentId: ID!, name: String, labelId: ID): Label
}

# Apollo Cache Control schema hints
directive @cacheControl(
  maxAge: Int,
  scope: CacheControlScope
) on OBJECT | FIELD_DEFINITION

enum CacheControlScope {
  PUBLIC
  PRIVATE
}